// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Migrations
{
    [DbContext(typeof(DiagnosticGuruContext))]
    [Migration("20230809143029_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Address")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_CityA")
                        .HasColumnType("int");

                    b.Property<int>("Id_Pa")
                        .HasColumnType("int");

                    b.Property<string>("Neigborhood")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Nameneigborhood");

                    b.Property<string>("NumberPlate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NumberPlate");

                    b.Property<string>("NumberVenereableWay")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NameVenereableWay");

                    b.Property<string>("NumberWay")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NumberWay")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuadrantPrefix")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("QuadranPrefix");

                    b.Property<string>("TypeWay")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("TypeWay");

                    b.HasKey("Id");

                    b.HasIndex("Id_CityA");

                    b.HasIndex("Id_Pa");

                    b.ToTable("addresses", (string)null);
                });

            modelBuilder.Entity("Dominio.Arl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Arl")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("arls", (string)null);
                });

            modelBuilder.Entity("Dominio.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_Bill")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_RepairOrder")
                        .HasColumnType("int");

                    b.Property<string>("Total")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("total");

                    b.Property<string>("TotalCostParts")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("TotalCostParts");

                    b.Property<string>("TotalService")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("TotalService");

                    b.HasKey("Id");

                    b.HasIndex("Id_RepairOrder");

                    b.ToTable("bills", (string)null);
                });

            modelBuilder.Entity("Dominio.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Brand")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Namebrand");

                    b.Property<int?>("Id_Brand")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("brand", null, t =>
                        {
                            t.Property("Id_Brand")
                                .HasColumnName("Id_Brand1");
                        });
                });

            modelBuilder.Entity("Dominio.Cabine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_cabine")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Inspeccion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Inspeccion");

                    b.ToTable("cabine", (string)null);
                });

            modelBuilder.Entity("Dominio.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_City")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Id_Region")
                        .HasColumnType("int");

                    b.Property<string>("NameCity")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NameCity");

                    b.HasKey("Id");

                    b.HasIndex("Id_Region");

                    b.ToTable("cities", (string)null);
                });

            modelBuilder.Entity("Dominio.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_contconfig")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Person")
                        .HasColumnType("int");

                    b.Property<int>("Id_TypeContact")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_TypeContact");

                    b.ToTable("contactconfiguration", (string)null);
                });

            modelBuilder.Entity("Dominio.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdPais")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCountry")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NombrePais");

                    b.HasKey("Id");

                    b.ToTable("countries", (string)null);
                });

            modelBuilder.Entity("Dominio.DiagnosticMechanic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_DiagMechanic")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cc_Mechanic")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("diagnosticmechanic", (string)null);
                });

            modelBuilder.Entity("Dominio.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Door")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Backdoorleft")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Backdoorleft");

                    b.Property<string>("Backdoorright")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Backdoorright");

                    b.Property<string>("Fowardleft")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Fowardleft");

                    b.Property<string>("Fowardright")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Fowardright");

                    b.Property<string>("Hood")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Hood");

                    b.Property<int>("Id_Inspeccion")
                        .HasColumnType("int");

                    b.Property<string>("Trunk")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Trunk");

                    b.HasKey("Id");

                    b.HasIndex("Id_Inspeccion");

                    b.ToTable("doors", (string)null);
                });

            modelBuilder.Entity("Dominio.Employe", b =>
                {
                    b.Property<int>("Id")
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("id_employe")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.Property<int>("Id_Arl")
                        .HasColumnType("int");

                    b.Property<int>("Id_Eps")
                        .HasColumnType("int");

                    b.Property<int?>("Id_PE")
                        .HasColumnType("int");

                    b.Property<int>("Id_Speciality")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Arl");

                    b.HasIndex("Id_Eps");

                    b.HasIndex("Id_PE");

                    b.HasIndex("Id_Speciality");

                    b.ToTable("employe", (string)null);
                });

            modelBuilder.Entity("Dominio.Eps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_Eps")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("eps", (string)null);
                });

            modelBuilder.Entity("Dominio.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Inspeccion")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfEntry")
                        .HasColumnType("date")
                        .HasColumnName("DateofEntry");

                    b.Property<string>("DiagCustomer")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Diagnosticustomer");

                    b.Property<int>("Id_Vehicle")
                        .HasColumnType("int");

                    b.Property<int?>("OrderServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Vehicle");

                    b.HasIndex("OrderServiceId");

                    b.ToTable("inspeccion", (string)null);
                });

            modelBuilder.Entity("Dominio.OrderService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_OrderService")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DelyveryDate")
                        .HasColumnType("Date")
                        .HasColumnName("DelyveryDate");

                    b.Property<int>("Id_City")
                        .HasColumnType("int");

                    b.Property<int>("Id_Inspeccion")
                        .HasColumnType("int");

                    b.Property<int>("Id_State")
                        .HasColumnType("int");

                    b.Property<int>("Id_Vehicle")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_City");

                    b.HasIndex("Id_State");

                    b.ToTable("orderservices", (string)null);
                });

            modelBuilder.Entity("Dominio.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cc_Person")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Contact")
                        .HasColumnType("int");

                    b.Property<int>("Id_TypePerson")
                        .HasColumnType("int");

                    b.Property<string>("LastNamePerson")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("LastNamePerson");

                    b.Property<string>("NamePerson")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NamePerson");

                    b.HasKey("Id");

                    b.HasIndex("Id_Contact");

                    b.HasIndex("Id_TypePerson");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("Dominio.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_Provider")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCompany")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NameCompany");

                    b.HasKey("Id");

                    b.ToTable("providers", (string)null);
                });

            modelBuilder.Entity("Dominio.Radio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Radio")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NameBrand");

                    b.Property<int>("Id_Cabine")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cabine");

                    b.ToTable("radio", (string)null);
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Region")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Pais")
                        .HasColumnType("int");

                    b.Property<string>("NameRegion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("NombreRegion");

                    b.HasKey("Id");

                    b.HasIndex("Id_Pais");

                    b.ToTable("regions", (string)null);
                });

            modelBuilder.Entity("Dominio.RelPartsOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Relserviceorder")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_RepairOrder")
                        .HasColumnType("int");

                    b.Property<int>("Id_SquareParts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_RepairOrder");

                    b.HasIndex("Id_SquareParts");

                    b.ToTable("relpartsorder", (string)null);
                });

            modelBuilder.Entity("Dominio.RelServiceOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_Relserviceorder")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_RepairOrder")
                        .HasColumnType("int");

                    b.Property<int>("Id_Service")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_RepairOrder");

                    b.HasIndex("Id_Service");

                    b.ToTable("relserviceorder", (string)null);
                });

            modelBuilder.Entity("Dominio.RepairOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_RepairOrder")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_DiagnosticMechanic")
                        .HasColumnType("int");

                    b.Property<int>("Id_OrderService")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_DiagnosticMechanic");

                    b.HasIndex("Id_OrderService");

                    b.ToTable("repairorders", (string)null);
                });

            modelBuilder.Entity("Dominio.Rol", b =>
                {
                    b.Property<int?>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Rol")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id_Rol");

                    b.ToTable("rols", (string)null);
                });

            modelBuilder.Entity("Dominio.RolEmploye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_RolEmploye")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_Employe")
                        .HasColumnType("int");

                    b.Property<int>("Id_Rol")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Employe");

                    b.ToTable("rolemployes", (string)null);
                });

            modelBuilder.Entity("Dominio.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_Service")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Id_RepairOrder")
                        .HasColumnType("int");

                    b.Property<int>("Id_ServiceFee")
                        .HasColumnType("int");

                    b.Property<string>("TotalValue")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("totalvalue");

                    b.HasKey("Id");

                    b.HasIndex("Id_ServiceFee");

                    b.ToTable("services", (string)null);
                });

            modelBuilder.Entity("Dominio.ServiceFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_ServiceFee")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeePorcent")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Fee_Porcent");

                    b.HasKey("Id");

                    b.ToTable("servicefee", (string)null);
                });

            modelBuilder.Entity("Dominio.Speciality", b =>
                {
                    b.Property<int?>("Id_Speciality")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Speciality")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id_Speciality");

                    b.ToTable("specialities", (string)null);
                });

            modelBuilder.Entity("Dominio.SquarePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_SquareParts")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Brand");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.Property<int>("Id_Nit")
                        .HasColumnType("int");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("Id_Nit");

                    b.ToTable("squareparts", (string)null);
                });

            modelBuilder.Entity("Dominio.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_State")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("state", (string)null);
                });

            modelBuilder.Entity("Dominio.SummaryFail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Fails")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.Property<int>("Id_DiagM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_DiagM");

                    b.ToTable("summaryfails", (string)null);
                });

            modelBuilder.Entity("Dominio.Telephone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Telephone")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Numero");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Telefono");

                    b.HasKey("Id");

                    b.ToTable("telephones", (string)null);
                });

            modelBuilder.Entity("Dominio.TypeContact", b =>
                {
                    b.Property<int?>("Id_TypeContact")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int")
                        .HasColumnName("Id_TypeContact")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("email");

                    b.Property<int>("Id_Telephone")
                        .HasColumnType("int");

                    b.HasKey("Id_TypeContact");

                    b.HasIndex("Id_Telephone");

                    b.ToTable("typecontacts", (string)null);
                });

            modelBuilder.Entity("Dominio.TypePerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_typePerson")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("typepersons", (string)null);
                });

            modelBuilder.Entity("Dominio.Upholstery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_upholstery")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Carpet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("carpet");

                    b.Property<string>("Ceiling")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("ceiling");

                    b.Property<int>("Id_Cabine")
                        .HasColumnType("int");

                    b.Property<string>("Others")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("others");

                    b.Property<string>("Seating")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("seating");

                    b.HasKey("Id");

                    b.HasIndex("Id_Cabine");

                    b.ToTable("upholstery", (string)null);
                });

            modelBuilder.Entity("Dominio.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_Vehicle")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("CodPlate")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("codplate");

                    b.Property<int>("Id_Brand")
                        .HasColumnType("int");

                    b.Property<int>("Id_Person")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Model");

                    b.Property<DateTime>("YearModel")
                        .HasColumnType("date")
                        .HasColumnName("yearModel");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Id_Person");

                    b.ToTable("vehicle", (string)null);
                });

            modelBuilder.Entity("Dominio.Address", b =>
                {
                    b.HasOne("Dominio.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("Id_CityA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("Id_Pa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Dominio.Bill", b =>
                {
                    b.HasOne("Dominio.RepairOrder", "RepairOrder")
                        .WithMany("Bills")
                        .HasForeignKey("Id_RepairOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairOrder");
                });

            modelBuilder.Entity("Dominio.Cabine", b =>
                {
                    b.HasOne("Dominio.Inspeccion", "Inspeccion")
                        .WithMany("Cabines")
                        .HasForeignKey("Id_Inspeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspeccion");
                });

            modelBuilder.Entity("Dominio.City", b =>
                {
                    b.HasOne("Dominio.Region", "Region")
                        .WithMany("Cities")
                        .HasForeignKey("Id_Region");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Dominio.Contact", b =>
                {
                    b.HasOne("Dominio.TypeContact", "TypeContact")
                        .WithMany("Contacts")
                        .HasForeignKey("Id_TypeContact")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeContact");
                });

            modelBuilder.Entity("Dominio.Door", b =>
                {
                    b.HasOne("Dominio.Inspeccion", "Inspecccion")
                        .WithMany("Doors")
                        .HasForeignKey("Id_Inspeccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inspecccion");
                });

            modelBuilder.Entity("Dominio.Employe", b =>
                {
                    b.HasOne("Dominio.DiagnosticMechanic", "DiagnosticMechanic")
                        .WithMany("Employes")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.RolEmploye", "RolEmploye")
                        .WithMany("Employes")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Arl", "Arl")
                        .WithMany("Employes")
                        .HasForeignKey("Id_Arl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Eps", "Eps")
                        .WithMany("Employes")
                        .HasForeignKey("Id_Eps")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Person", "Person")
                        .WithMany("Employes")
                        .HasForeignKey("Id_PE");

                    b.HasOne("Dominio.Speciality", "Speciality")
                        .WithMany("Employes")
                        .HasForeignKey("Id_Speciality")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Arl");

                    b.Navigation("DiagnosticMechanic");

                    b.Navigation("Eps");

                    b.Navigation("Person");

                    b.Navigation("RolEmploye");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("Dominio.Inspeccion", b =>
                {
                    b.HasOne("Dominio.Vehicle", "Vehicle")
                        .WithMany("Inspeccions")
                        .HasForeignKey("Id_Vehicle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.OrderService", "OrderService")
                        .WithMany("Inspeccions")
                        .HasForeignKey("OrderServiceId");

                    b.Navigation("OrderService");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Dominio.OrderService", b =>
                {
                    b.HasOne("Dominio.City", "City")
                        .WithMany("OrderServices")
                        .HasForeignKey("Id_City")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.State", "State")
                        .WithMany("OrderServices")
                        .HasForeignKey("Id_State")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("Dominio.Person", b =>
                {
                    b.HasOne("Dominio.Contact", "Contact")
                        .WithMany("Persons")
                        .HasForeignKey("Id_Contact")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.TypePerson", "TypePerson")
                        .WithMany("Persons")
                        .HasForeignKey("Id_TypePerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("TypePerson");
                });

            modelBuilder.Entity("Dominio.Radio", b =>
                {
                    b.HasOne("Dominio.Cabine", "Cabine")
                        .WithMany("Radios")
                        .HasForeignKey("Id_Cabine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabine");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.HasOne("Dominio.Country", "Country")
                        .WithMany("Regions")
                        .HasForeignKey("Id_Pais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Dominio.RelPartsOrder", b =>
                {
                    b.HasOne("Dominio.RepairOrder", "RepairOrder")
                        .WithMany("RelPartsOrders")
                        .HasForeignKey("Id_RepairOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.SquarePart", "SquarePart")
                        .WithMany("RelPartsOrders")
                        .HasForeignKey("Id_SquareParts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairOrder");

                    b.Navigation("SquarePart");
                });

            modelBuilder.Entity("Dominio.RelServiceOrder", b =>
                {
                    b.HasOne("Dominio.RepairOrder", "RepairOrder")
                        .WithMany("RelServiceOrders")
                        .HasForeignKey("Id_RepairOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Service", "Service")
                        .WithMany("RelServiceOrders")
                        .HasForeignKey("Id_Service")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RepairOrder");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Dominio.RepairOrder", b =>
                {
                    b.HasOne("Dominio.DiagnosticMechanic", "DiagnosticMechanic")
                        .WithMany("RepairOrders")
                        .HasForeignKey("Id_DiagnosticMechanic")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.OrderService", "OrderService")
                        .WithMany("RepairOrders")
                        .HasForeignKey("Id_OrderService")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiagnosticMechanic");

                    b.Navigation("OrderService");
                });

            modelBuilder.Entity("Dominio.RolEmploye", b =>
                {
                    b.HasOne("Dominio.Rol", "Rol")
                        .WithMany("RolEmployes")
                        .HasForeignKey("Id_Employe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Dominio.Service", b =>
                {
                    b.HasOne("Dominio.ServiceFee", "ServiceFee")
                        .WithMany("Services")
                        .HasForeignKey("Id_ServiceFee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceFee");
                });

            modelBuilder.Entity("Dominio.SquarePart", b =>
                {
                    b.HasOne("Dominio.Provider", "Provider")
                        .WithMany("SquareParts")
                        .HasForeignKey("Id_Nit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Dominio.SummaryFail", b =>
                {
                    b.HasOne("Dominio.DiagnosticMechanic", "DiagnosticMechanic")
                        .WithMany("SummaryFails")
                        .HasForeignKey("Id_DiagM")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiagnosticMechanic");
                });

            modelBuilder.Entity("Dominio.TypeContact", b =>
                {
                    b.HasOne("Dominio.Telephone", "Telephone")
                        .WithMany("TypeContacts")
                        .HasForeignKey("Id_Telephone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Telephone");
                });

            modelBuilder.Entity("Dominio.Upholstery", b =>
                {
                    b.HasOne("Dominio.Cabine", "Cabine")
                        .WithMany("Upholsteries")
                        .HasForeignKey("Id_Cabine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabine");
                });

            modelBuilder.Entity("Dominio.Vehicle", b =>
                {
                    b.HasOne("Dominio.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandId");

                    b.HasOne("Dominio.Person", "Person")
                        .WithMany("Vehicles")
                        .HasForeignKey("Id_Person")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Dominio.Arl", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Dominio.Brand", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Dominio.Cabine", b =>
                {
                    b.Navigation("Radios");

                    b.Navigation("Upholsteries");
                });

            modelBuilder.Entity("Dominio.City", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("OrderServices");
                });

            modelBuilder.Entity("Dominio.Contact", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Dominio.Country", b =>
                {
                    b.Navigation("Regions");
                });

            modelBuilder.Entity("Dominio.DiagnosticMechanic", b =>
                {
                    b.Navigation("Employes");

                    b.Navigation("RepairOrders");

                    b.Navigation("SummaryFails");
                });

            modelBuilder.Entity("Dominio.Eps", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Dominio.Inspeccion", b =>
                {
                    b.Navigation("Cabines");

                    b.Navigation("Doors");
                });

            modelBuilder.Entity("Dominio.OrderService", b =>
                {
                    b.Navigation("Inspeccions");

                    b.Navigation("RepairOrders");
                });

            modelBuilder.Entity("Dominio.Person", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Employes");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Dominio.Provider", b =>
                {
                    b.Navigation("SquareParts");
                });

            modelBuilder.Entity("Dominio.Region", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Dominio.RepairOrder", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("RelPartsOrders");

                    b.Navigation("RelServiceOrders");
                });

            modelBuilder.Entity("Dominio.Rol", b =>
                {
                    b.Navigation("RolEmployes");
                });

            modelBuilder.Entity("Dominio.RolEmploye", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Dominio.Service", b =>
                {
                    b.Navigation("RelServiceOrders");
                });

            modelBuilder.Entity("Dominio.ServiceFee", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Dominio.Speciality", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("Dominio.SquarePart", b =>
                {
                    b.Navigation("RelPartsOrders");
                });

            modelBuilder.Entity("Dominio.State", b =>
                {
                    b.Navigation("OrderServices");
                });

            modelBuilder.Entity("Dominio.Telephone", b =>
                {
                    b.Navigation("TypeContacts");
                });

            modelBuilder.Entity("Dominio.TypeContact", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Dominio.TypePerson", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Dominio.Vehicle", b =>
                {
                    b.Navigation("Inspeccions");
                });
#pragma warning restore 612, 618
        }
    }
}
